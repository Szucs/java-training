package com.sample.commandlineapp;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.MatcherAssert.assertThat;

import java.io.File;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;


public class XmlFilenameFilterTest {
	
	private XmlFilenameFilter filter;
	private static final String TESTDIR = "testdir";
	private static File dir = null;
	
	@BeforeClass
	public static void before_everything() {
		dir = new File(TESTDIR);		
	}
	
	@Before
	public void before_each_test_case() {
		filter = new XmlFilenameFilter();
	}
	
	@Test
	public void it_accepts_a_filename_that_ends_with_dot_xml() {
		assertThat(filter.accept(dir, "dummy1.xml"), equalTo(true));
	}
	
	@Test
	public void it_bypasses_a_filename_that_does_not_end_with_dot_xml() {
		assertThat(filter.accept(dir, "foo.txt"), equalTo(false));
	}
	
	@Test
	public void it_accepts_directories_regardless_of_their_filename_pattern() {
		File dir = new File("testdir");
		assertThat(filter.accept(null, dir.getAbsolutePath()), equalTo(true));
	}

}
